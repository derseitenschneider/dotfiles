# set -g default-terminal "xterm-256color"
# set -ga terminal-overrides ",xterm-256color:Tc"

set -g default-terminal "tmux-256color"
set -ag terminal-overrides ",xterm-256color:RGB"
set -q -g status-utf8 on

unbind C-b
set -g prefix C-s
bind-key C-s send-prefix

set -g base-index 1

unbind %
unbind '"' 

# window splits
bind - split-window -v -c "#{pane_current_path}"
bind | split-window -h -c "#{pane_current_path}"

unbind r
bind r source-file ~/.tmux.conf

bind -r j resize-pane -D 5
bind -r k resize-pane -U 5
bind -r l resize-pane -R 5
bind -r h resize-pane -L 5

# Repo fzf navigation
bind-key -r f run-shell "tmux neww ~/.config/scripts/fzf-repo.sh"

bind-key -r E run-shell "~/.config/scripts/fzf-repo.sh ~/Repositories/personal/eleno"
bind-key -r A run-shell "~/.config/scripts/fzf-repo.sh ~/Repositories/02-local/athletes"
bind-key -r B run-shell "~/.config/scripts/fzf-repo.sh ~/Repositories/02-local/baspo-prototypes/"
bind-key -r T run-shell "~/.config/scripts/fzf-repo.sh ~/.dotfiles/tmux/"
bind-key -r N run-shell "~/.config/scripts/fzf-repo.sh ~/.dotfiles/nvim/.config/nvim/"

# First, set the base settings
set-option -g pane-border-lines "heavy"
set-option -g pane-border-style fg="#dc8a78"
set-option -g pane-active-border-style fg=green

# Then handle the pane-specific settings that need an active pane
set-hook -g after-new-session {
    set-option -g pane-border-status top
    set-option -g pane-border-format "#{pane_index}"
}

bind -r m resize-pane -Z

set -g mouse on
set -g status-position top

set-window-option -g mode-keys vi

bind c new-window -c "#{pane_current_path}"

# Enable clipboard support
set-option -g default-command "reattach-to-user-namespace -l $SHELL"

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v send-keys -X begin-selection

# Setup 'y' to yank (copy) and immediately send to system clipboard
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
unbind -T copy-mode-vi MouseDragEnd1Pane # don't exit copy mode after dragging with mouse


set -g mouse on

set-window-option -g mode-keys vi

bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

set-option -g status-position top

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'catppuccin/tmux'
set -g @plugin 'christoomey/vim-tmux-navigator'

set -g @catppuccin_window_left_separator ""
set -g @catppuccin_window_right_separator " "
set -g @catppuccin_window_middle_separator " █"
set -g @catppuccin_window_number_position "right"
set -g @catppuccin_window_number_position "right"
set -g @catppuccin_window_status_enable "yes"

set -g @catppuccin_window_default_fill "number"
set -g @catppuccin_window_default_text "#W"

set -g @catppuccin_window_current_fill "number"
set -g @catppuccin_window_current_text "#W#{?window_zoomed_flag,(),}"

set -g @catppuccin_status_modules_left "session"
set -g @catppuccin_status_modules_right "application directory"
set -g @catppuccin_status_left_separator  " "
set -g @catppuccin_status_right_separator ""
set -g @catppuccin_status_right_separator_inverse "no"
set -g @catppuccin_status_fill "icon"
set -g @catppuccin_status_connect_separator "no"

set -g @catppuccin_directory_text "#{b:pane_current_path}"

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'github_username/plugin_name#branch'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
